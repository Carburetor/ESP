CREATE OR REPLACE FUNCTION
  "test stream_read_last is last message written in stream"()
RETURNS SETOF TEXT
AS $$
DECLARE
  last_data jsonb[];
BEGIN
  PERFORM stream_write(
    gen_random_uuid(),
    'account-123'::varchar,
    ''::varchar,
    '234'::jsonb
  );
  last_data = ARRAY(
    SELECT "data" FROM stream_read_last('account-123')
  );

  return query SELECT ok(
    last_data = ARRAY['234'::jsonb]::jsonb[]
  );
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION
  "test stream_read_last is last message written in category"()
RETURNS SETOF TEXT
AS $$
DECLARE
  last_data jsonb[];
BEGIN
  PERFORM stream_write(
    gen_random_uuid(),
    'account-123'::varchar,
    ''::varchar,
    '234'::jsonb
  );
  PERFORM stream_write(
    gen_random_uuid(),
    'account-456'::varchar,
    ''::varchar,
    '111'::jsonb
  );
  last_data = ARRAY(
    SELECT "data" FROM stream_read_last('account')
  );

  return query SELECT ok(
    last_data = ARRAY['111'::jsonb]::jsonb[]
  );
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION
  "test stream_read_last is empty when no message is written"()
RETURNS SETOF TEXT
AS $$
DECLARE
  last_data jsonb[];
BEGIN
  last_data = ARRAY(
    SELECT "data" FROM stream_read_last('account')
  );

  return query SELECT ok(
    last_data = ARRAY[]::jsonb[]
  );
END;
$$ LANGUAGE plpgsql;
