#!/usr/bin/env bash

executable="$0"
project="${PROJECT_PATH:-$PWD}"

default_database_name='eventstore'
database="${DATABASE_NAME:-$default_database_name}"

err_invalid_command=1

exec_psql() {
  PGOPTIONS='--client-min-messages=warning' \
    psql \
      -X -q -a -v ON_ERROR_STOP=1 --pset pager=off \
      -f "$1"
}

exec_psql_quiet() {
  PGOPTIONS='--client-min-messages=warning' \
    psql \
      -X -q -v ON_ERROR_STOP=1 --pset pager=off \
      -f "$1"
}

perform() {
  case "$1" in
    setup)
      perform load-development
      perform load-structure
      perform load-code
      perform load-indexes
      perform load-triggers
      ;;

    load-development)
      set -e
        PGOPTIONS='--client-min-messages=warning' \
          psql \
            -X -q -a -v ON_ERROR_STOP=1 --pset pager=off \
            -d "$PGUSER" \
            -f "$project/app/environment/development.psql"
      set +e
      ;;

    load-production)
      set -e
        exec_psql "$project/app/environment/production.psql"
      set +e
      ;;

    load-structure)
      set -e
        exec_psql "$project/app/structure.psql"
      set +e
      ;;

    load-code)
      set -e
        exec_psql "$project/app/code.psql"
      set +e
      ;;

    load-indexes)
      set -e
        exec_psql "$project/app/indexes.psql"
      set +e
      ;;

    load-triggers)
      set -e
        exec_psql "$project/app/triggers.psql"
      set +e
      ;;

    console)
      psql
      ;;

    test)
      set -e
        while IFS= read -d $'\0' -r file ; do
          exec_psql_quiet "$file"
        done < <(find 'tests/' -iname '*.pg' -print0)
      set +e
      pg_prove \
        --recurse --trap --shuffle --ext=pg --runtests \
        --failures --verbose --match '^test\s'
      ;;

    install)
      local dbname="${@:2}"
      if [[ -z "${dbname// }" ]]; then
        >&2 echo "Database name required"
      fi
      echo "Install on database: $dbname"
      set -e
        PGDATABASE="$dbname" perform load-production
        PGDATABASE="$dbname" perform load-structure
        PGDATABASE="$dbname" perform load-code
        PGDATABASE="$dbname" perform load-indexes
        PGDATABASE="$dbname" perform load-triggers
      set +e
      ;;

    shortlist)
      echo 'setup console test install load-env load-structure load-code load-indexes load-triggers'
      ;;

    *)
      if [[ ! -z "${1// }" ]]; then
        >&2 echo $"Invalid command: $1"
      fi
      local shortlist="$(perform shortlist)"
      >&2 echo $"Usage: $executable ${shortlist// /|}"
      exit $err_invalid_command
      ;;

  esac
}

pushd "$project" > /dev/null
perform "$@"
performed_result=$?
popd > /dev/null

exit $performed_result
